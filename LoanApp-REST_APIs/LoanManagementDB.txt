USE [master]
GO

IF DB_ID('LoanManagementDB') IS NOT NULL
BEGIN
    ALTER DATABASE [LoanManagementDB] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [LoanManagementDB];
END
GO

CREATE DATABASE [LoanManagementDB]
GO

USE [LoanManagementDB]
GO
CREATE TABLE Roles (
    role_id INT IDENTITY(1,1) PRIMARY KEY,
    role_name VARCHAR(20) NOT NULL UNIQUE
);
GO
CREATE TABLE Users (
    user_id INT IDENTITY(1,1) PRIMARY KEY,
    role_id INT NOT NULL FOREIGN KEY REFERENCES Roles(role_id),
    username VARCHAR(50) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL, -- Plain text, e.g., Pass@123
    name VARCHAR(100) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    mobile_number VARCHAR(15) NOT NULL,
    is_active BIT NOT NULL DEFAULT 1, -- 1 = active, 0 = inactive
    created_at DATETIME NOT NULL DEFAULT GETDATE()
);
CREATE TABLE Loan_Requests (
    request_id INT IDENTITY(1,1) PRIMARY KEY,
    customer_id INT NOT NULL FOREIGN KEY REFERENCES Users(user_id),
    assigned_officer_id INT NULL FOREIGN KEY REFERENCES Users(user_id), -- Nullable for self-applications
    loan_type VARCHAR(50) NOT NULL,
    amount DECIMAL(10,2) NOT NULL CHECK (amount > 0),
    status VARCHAR(50) NOT NULL CHECK (status IN ('pending', 'in_background_verification', 'in_loan_verification', 'approved', 'rejected')) DEFAULT 'pending',
    request_date DATETIME NOT NULL DEFAULT GETDATE(),
    details TEXT NULL
);
CREATE TABLE Background_Verification_Assignments (
    assignment_id INT IDENTITY(1,1) PRIMARY KEY,
    request_id INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Loan_Requests(request_id),
    officer_id INT NOT NULL FOREIGN KEY REFERENCES Users(user_id),
    status VARCHAR(20) NOT NULL CHECK (status IN ('assigned', 'in_progress', 'completed')) DEFAULT 'assigned',
    verification_details TEXT NULL,
    assigned_at DATETIME NOT NULL DEFAULT GETDATE()
);
CREATE TABLE Loan_Verification_Assignments (
    assignment_id INT IDENTITY(1,1) PRIMARY KEY,
    request_id INT NOT NULL UNIQUE FOREIGN KEY REFERENCES Loan_Requests(request_id),
    officer_id INT NOT NULL FOREIGN KEY REFERENCES Users(user_id),
    status VARCHAR(20) NOT NULL CHECK (status IN ('assigned', 'in_progress', 'completed')) DEFAULT 'assigned',
    verification_details TEXT NULL,
    assigned_at DATETIME NOT NULL DEFAULT GETDATE()
);
CREATE TABLE Help (
    help_id INT IDENTITY(1,1) PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    content TEXT NOT NULL,
    created_at DATETIME NOT NULL DEFAULT GETDATE(),
    updated_at DATETIME NOT NULL DEFAULT GETDATE()
);
CREATE TABLE Feedback_Questions (
    question_id INT IDENTITY(1,1) PRIMARY KEY,
    question_text VARCHAR(255) NOT NULL,
    created_at DATETIME NOT NULL DEFAULT GETDATE()
);
CREATE TABLE Feedback_Submissions (
    submission_id INT IDENTITY(1,1) PRIMARY KEY,
    customer_id INT NOT NULL FOREIGN KEY REFERENCES Users(user_id),
    submission_date DATETIME NOT NULL DEFAULT GETDATE()
);
CREATE TABLE Feedback_Answers (
    answer_id INT IDENTITY(1,1) PRIMARY KEY,
    submission_id INT NOT NULL FOREIGN KEY REFERENCES Feedback_Submissions(submission_id),
    question_id INT NOT NULL FOREIGN KEY REFERENCES Feedback_Questions(question_id),
    answer TEXT NOT NULL,
    CONSTRAINT UQ_Submission_Question UNIQUE (submission_id, question_id)
);





